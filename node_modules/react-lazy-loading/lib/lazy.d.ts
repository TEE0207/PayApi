/// <reference types="react" />
import * as React from 'react';
export interface LazyOptions<P> {
    isLoading: (props: P) => boolean;
    isFailed?: (props: P) => boolean;
    renderLoading?: (props: P) => JSX.Element | null;
    renderFailed?: (props: P) => JSX.Element | null;
}
declare function lazy<P>({isLoading, isFailed, renderLoading, renderFailed}: LazyOptions<P>): (WrappedComponent: React.ComponentClass<P> | React.StatelessComponent<P>) => any;
export default lazy;
